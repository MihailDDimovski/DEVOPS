name: Practice
 
on:

  push:
    branches:
      - full_work_flow
 
jobs:
  editorconfig:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.x"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
 
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          pip install black
          pip install -r './requirements.txt'
 
      - name: Run EditorConfig Checker
        uses: editorconfig-checker/action-editorconfig-checker@main

      - name: Analyzing the code with pylint

        run: |
          pylint --rcfile='./pylintrc' $(git ls-files './app')
 
      - name: Lint with Markdown-lint
        uses: articulate/actions-markdownlint@v1

        with:
          files: './*.md'
          ignore: node_modules
          version: 0.28.1
 
      - name: Execute unit-test

        run: |
          cd './app/'
          python -m unittest app_test.py
 
      - name: Perform gitleaks
        uses: zricethezav/gitleaks-action@v2
        with:
          args: --path .

      - name: SAST - SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          organization: "mihailddimovski"
          token: ${{ secrets.SONAR_TOKEN }}

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.10@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}